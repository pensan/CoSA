<?php
namespace TYPO3\FLOW3\Persistence\Generic\Backend;

use Doctrine\ORM\Mapping as ORM;
use TYPO3\FLOW3\Annotations as FLOW3;

	/**
	 * Autogenerated Proxy Class
	 */
abstract class AbstractBackend extends AbstractBackend_Original implements \TYPO3\FLOW3\Object\Proxy\ProxyInterface {

	private $FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices = array();

	private $FLOW3_AOP_Proxy_groupedAdviceChains = array();

	private $FLOW3_AOP_Proxy_methodIsInAdviceMode = array();


	/**
	 * Autogenerated Proxy Method
	 */
	public function __construct() {

		$this->FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray();
		parent::__construct();
	}

	/**
	 * Autogenerated Proxy Method
	 */
	 protected function FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray() {
		if (method_exists(get_parent_class($this), 'FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray') && is_callable('parent::FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray')) parent::FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray();

		$objectManager = \TYPO3\FLOW3\Core\Bootstrap::$staticObjectManager;
		$this->FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices = array(
			'emitRemovedObject' => array(
				'TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice' => array(
					new \TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice('TYPO3\FLOW3\SignalSlot\SignalAspect', 'forwardSignalToDispatcher', $objectManager, NULL),
				),
			),
			'emitPersistedObject' => array(
				'TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice' => array(
					new \TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice('TYPO3\FLOW3\SignalSlot\SignalAspect', 'forwardSignalToDispatcher', $objectManager, NULL),
				),
			),
		);
	}

	/**
	 * Autogenerated Proxy Method
	 */
	 public function __wakeup() {

		$this->FLOW3_AOP_Proxy_buildMethodsAndAdvicesArray();
		$result = NULL;
		if (method_exists(get_parent_class($this), '__wakeup') && is_callable('parent::__wakeup')) parent::__wakeup();
		return $result;
	}

	/**
	 * Autogenerated Proxy Method
	 */
	 private function FLOW3_AOP_Proxy_getAdviceChains($methodName) {
		$adviceChains = array();
		if (isset($this->FLOW3_AOP_Proxy_groupedAdviceChains[$methodName])) {
			$adviceChains = $this->FLOW3_AOP_Proxy_groupedAdviceChains[$methodName];
		} else {
			if (isset($this->FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices[$methodName])) {
				$groupedAdvices = $this->FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices[$methodName];
				if (isset($groupedAdvices['TYPO3\FLOW3\AOP\Advice\AroundAdvice'])) {
					$this->FLOW3_AOP_Proxy_groupedAdviceChains[$methodName]['TYPO3\FLOW3\AOP\Advice\AroundAdvice'] = new \TYPO3\FLOW3\AOP\Advice\AdviceChain($groupedAdvices['TYPO3\FLOW3\AOP\Advice\AroundAdvice'], $this);
					$adviceChains = $this->FLOW3_AOP_Proxy_groupedAdviceChains[$methodName];
				}
			}
		}
		return $adviceChains;
	}

	/**
	 * Autogenerated Proxy Method
	 */
	 public function FLOW3_AOP_Proxy_invokeJoinPoint(\TYPO3\FLOW3\AOP\JoinPointInterface $joinPoint) {
		if (__CLASS__ !== $joinPoint->getClassName()) return parent::FLOW3_AOP_Proxy_invokeJoinPoint($joinPoint);
		if (isset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode[$joinPoint->getMethodName()])) {
			return call_user_func_array(array('self', $joinPoint->getMethodName()), $joinPoint->getMethodArguments());
		}
	}

	/**
	 * Autogenerated Proxy Method
	 * @param object $object The object that will be removed
	 * @return void
	 * @TYPO3\FLOW3\Annotations\Signal
	 */
	 protected function emitRemovedObject($object) {

		if (isset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitRemovedObject'])) {
		$result = parent::emitRemovedObject($object);

		} else {
			$this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitRemovedObject'] = TRUE;
			try {
			
					$methodArguments = array();

				$methodArguments['object'] = $object;
			
					$joinPoint = new \TYPO3\FLOW3\AOP\JoinPoint($this, 'TYPO3\FLOW3\Persistence\Generic\Backend\AbstractBackend', 'emitRemovedObject', $methodArguments);
					$result = $this->FLOW3_AOP_Proxy_invokeJoinPoint($joinPoint);

					$advices = $this->FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices['emitRemovedObject']['TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice'];
					$joinPoint = new \TYPO3\FLOW3\AOP\JoinPoint($this, 'TYPO3\FLOW3\Persistence\Generic\Backend\AbstractBackend', 'emitRemovedObject', $methodArguments, NULL, $result);
					foreach ($advices as $advice) {
						$advice->invoke($joinPoint);
					}

			} catch(\Exception $e) {
				unset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitRemovedObject']);
				throw $e;
			}
			unset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitRemovedObject']);
		}
		return $result;
	}

	/**
	 * Autogenerated Proxy Method
	 * @param object $object The object that will be persisted
	 * @param integer $objectState The state, see self::OBJECTSTATE_*
	 * @return void
	 * @TYPO3\FLOW3\Annotations\Signal
	 */
	 protected function emitPersistedObject($object, $objectState) {

		if (isset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitPersistedObject'])) {
		$result = parent::emitPersistedObject($object, $objectState);

		} else {
			$this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitPersistedObject'] = TRUE;
			try {
			
					$methodArguments = array();

				$methodArguments['object'] = $object;
				$methodArguments['objectState'] = $objectState;
			
					$joinPoint = new \TYPO3\FLOW3\AOP\JoinPoint($this, 'TYPO3\FLOW3\Persistence\Generic\Backend\AbstractBackend', 'emitPersistedObject', $methodArguments);
					$result = $this->FLOW3_AOP_Proxy_invokeJoinPoint($joinPoint);

					$advices = $this->FLOW3_AOP_Proxy_targetMethodsAndGroupedAdvices['emitPersistedObject']['TYPO3\FLOW3\AOP\Advice\AfterReturningAdvice'];
					$joinPoint = new \TYPO3\FLOW3\AOP\JoinPoint($this, 'TYPO3\FLOW3\Persistence\Generic\Backend\AbstractBackend', 'emitPersistedObject', $methodArguments, NULL, $result);
					foreach ($advices as $advice) {
						$advice->invoke($joinPoint);
					}

			} catch(\Exception $e) {
				unset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitPersistedObject']);
				throw $e;
			}
			unset($this->FLOW3_AOP_Proxy_methodIsInAdviceMode['emitPersistedObject']);
		}
		return $result;
	}
}
#0             %CLASS%TYPO3_FLOW3_Persistence_Generic_Backend_AbstractBackend6089      